package biactiva.services.ejecutores;

import org.json.simple.JSONArray;
import org.json.simple.JSONObject;

import biactiva.services.convertidos.csvAJson.AbstractJsonRestEstructura;
import biactiva.services.principal.peticiones.EPeticiones;
import biactiva.services.principal.peticiones.GetExistFieldURLQueryRightNow;
import biactiva.services.principal.peticiones.GetGenerico;
import biactiva.services.principal.peticiones.PostGenerico;
import biactiva.services.principal.peticiones.UpdateGenericoRightNow;
import biactiva.services.singletons.ConfiguracionEntidadParticular;
import biactiva.services.singletons.RecEntAct;
import biactiva.services.singletons.RecuperadorPropierdadesJson;
import biactiva.services.util.json.JsonUtils;

public class EjecutarContactosSalesAService implements IEjecutar {

	@Override
	public void procesar(AbstractJsonRestEstructura resultadoMapeo, JSONObject jsonActual) throws Exception {
		ConfiguracionEntidadParticular r= RecEntAct.getInstance().getCep();
		String urlFianl=r.getUrlVerificarExistencia(jsonActual);
		String idContacto=null;
		if(urlFianl!=null){
			GetExistFieldURLQueryRightNow get = new GetExistFieldURLQueryRightNow(EPeticiones.GET,urlFianl,r.getCabeceraInsertar());
			idContacto=(String)get.realizarPeticion();
		}
		addOrganization(jsonActual,resultadoMapeo);
		if(idContacto==null){
			PostGenerico post= new PostGenerico(EPeticiones.POST,r.getUrlInsertar(),r.getCabeceraInsertar());
			addContactType(jsonActual,resultadoMapeo);
			System.out.println(resultadoMapeo);
			System.out.println("Insertando");
//			post.realizarPeticion( resultadoMapeo );
		}
		else{
			GetGenerico getGenerico = new GetGenerico(EPeticiones.GET, r.getUrlInsertar(), r.getCabeceraInsertar());
			JSONObject jsonContactoService=(JSONObject)getGenerico.realizarPeticion(idContacto);
			addContactType(jsonActual,resultadoMapeo);
			System.out.println(resultadoMapeo);
			System.out.println("Actualizando..");
			UpdateGenericoRightNow update= new UpdateGenericoRightNow(EPeticiones.UPDATE, r.getUrlInsertar(),r.getCabeceraInsertar());
//			update.realizarPeticion(idContacto, resultadoMapeo);
		}
		System.out.println("************");		
	}
	
	private void addContactType(JSONObject jsonActual, JSONObject jsonResultadoMapeo) throws Exception{
		Boolean comercial= (Boolean)jsonActual.get("PersonDEO_Comercial_c");
		Boolean administrativo= (Boolean)jsonActual.get("PersonDEO_Administrativo_c");
		Boolean apoderado= (Boolean)jsonActual.get("PersonDEO_Apoderado_c");
		Boolean tecnico= (Boolean)jsonActual.get("PersonDEO_Tecnico_c");
		Boolean cobranza= (Boolean)jsonActual.get("PersonDEO_Cobranza_c");
		
		System.out.println("Valor PersonDEO_Comercial_c:"+comercial);
		System.out.println("Valor PersonDEO_Administrativo_c:"+administrativo);
		System.out.println("Valor PersonDEO_Apoderado_c:"+apoderado);
		System.out.println("Valor PersonDEO_Tecnico_c:"+tecnico);
		System.out.println("Valor PersonDEO_Cobranza_c:"+cobranza);
		
		if(comercial!=null && comercial.booleanValue()){
			//JSONObject informacionContactType= JsonUtils.convertir("{\"id\": }");
		}
	}
	
	private void addOrganization(JSONObject jsonActual, JSONObject jsonResultadoMapeo) throws Exception{
		try{
			ConfiguracionEntidadParticular r= RecEntAct.getInstance().getCep();
			RecuperadorPropierdadesJson rpj = r.getRecuperadorPropiedadesJson();
			JSONObject mapeador = rpj.getMapearOrganizacion("AccountPartyId");
			String accountParyId=jsonActual.get("AccountPartyId").toString();
			String urlExtraer= mapeador.get("urlExtraer").toString().replaceAll(r.getIdentificadorAtributo()+"CLAVE"+r.getIdentificadorAtributo(), accountParyId);
			GetGenerico get= new GetGenerico(EPeticiones.GET, urlExtraer, r.getCabeceraExtraer());
			JSONArray jsonArray= (JSONArray) get.realizarPeticion();
			JSONObject json=(JSONObject) jsonArray.get(0);
			String urlInsertar= mapeador.get("urlInsertar").toString().replaceAll(r.getIdentificadorAtributo()+"CLAVE"+r.getIdentificadorAtributo(), CUIT);

			get= new GetGenerico(EPeticiones.GET, urlInsertar, r.getCabeceraInsertar());
			jsonArray= (JSONArray) get.realizarPeticion();
			json=(JSONObject) jsonArray.get(0);
			jsonResultadoMapeo.put("organization", JsonUtils.convertir("{\"id\":"+json.get("id")));

		
		}catch(Exception e){
			e.printStackTrace();
		}
	}

	
	private JSONObject mapeoContactType(String contactType, int nroContactType) throws Exception{
		if(nroContactType == 1){
			JSONObject informacionContactType= JsonUtils.convertir("{\"id\":"+mapeoContactTypeSalesAService(contactType,nroContactType)+"}");
			return informacionContactType;
		}
		JSONObject aux= new JSONObject();
		JSONObject aux2= new JSONObject();
		JSONObject informacionContactType;
		informacionContactType= JsonUtils.convertir("{\"id\":"+mapeoContactTypeSalesAService(contactType,nroContactType)+"}");
		aux.put("contact_type"+nroContactType,informacionContactType );
		aux2.put("c",aux );
		return aux2;
	}
	
	private Long mapeoContactTypeSalesAService(String contactType, int nroContactType){
		if(nroContactType==1){
			if(contactType.equalsIgnoreCase("TIPOC1"))
				return 1L;
			else if(contactType.equalsIgnoreCase("TIPOC2"))
				return 2L;
			else if(contactType.equalsIgnoreCase("TIPOC3"))
				return 3L;
			else if(contactType.equalsIgnoreCase("TIPOC4"))
				return 4L;
			else if(contactType.equalsIgnoreCase("TIPOC5"))
				return 5L;
		}
		else if(nroContactType == 2){
			if(contactType.equalsIgnoreCase("TIPOC1"))
				return 16L;
			else if(contactType.equalsIgnoreCase("TIPOC2"))
				return 17L;
			else if(contactType.equalsIgnoreCase("TIPOC3"))
				return 18L;
			else if(contactType.equalsIgnoreCase("TIPOC4"))
				return 19L;
			else if(contactType.equalsIgnoreCase("TIPOC5"))
				return 20L;			
		}
		else{
			if(contactType.equalsIgnoreCase("TIPOC1"))
				return 21L;
			else if(contactType.equalsIgnoreCase("TIPOC2"))
				return 22L;
			else if(contactType.equalsIgnoreCase("TIPOC3"))
				return 23L;
			else if(contactType.equalsIgnoreCase("TIPOC4"))
				return 24L;
			else if(contactType.equalsIgnoreCase("TIPOC5"))
				return 25L;
		}
		return null;
	}

//	public static void main(String[] args) throws Exception {
//		EjecutarContactosSalesAService get = new EjecutarContactosSalesAService();
//		JSONObject a=JsonUtils.convertir("{\"contactType\":{\"id\":2},\"customFields\":{\"c\":{\"contact_type2\":{\"id\":19} ,\"contact_type3\":null}}}");
//		JSONObject b= JsonUtils.convertir("{}");
////		JSONObject b=JsonUtils.convertir("{\"customFields\":{\"CO\":{\"contact_type1\":{\"id\":2}}}}");
//		get.addContactType("TIPOC4",a,b);
//		System.out.println(b);
//	}
}
