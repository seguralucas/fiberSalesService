package biactiva.services.convertidos.csvAJson;


import org.json.simple.parser.ParseException;

import biactiva.services.singletons.ConfiguracionEntidadParticular;
import biactiva.services.singletons.RecEntAct;
import biactiva.services.singletons.RecuperadorPropierdadesJson;

public class JsonGenerico extends AbstractJsonRestEstructura{
	/*************************************/
	
	/*************************************/

	/**
	 * @throws Exception *********************************************/
	
	public JsonGenerico(ConfiguracionEntidadParticular confEntidadPart) throws Exception {
		super();
	}
	
	@Override
	public Object alterarValor(String cabecera, String valor) throws Exception {
		valor =mapearValores(cabecera,valor);
		switch(RecEntAct.getInstance().getCep().getRecuperadorPropiedadesJson().getTipo(cabecera).toLowerCase()){
			case RecuperadorPropierdadesJson.TIPO_FECHA: return procesarFecha(cabecera,valor);
			case RecuperadorPropierdadesJson.TIPO_ENTERO: return procesarEntero(cabecera,valor);
			case RecuperadorPropierdadesJson.TIPO_CADENA: return  procesarCadena(cabecera,valor);
			case RecuperadorPropierdadesJson.TIPO_BOOLEANO: return  procesarBooleano(cabecera,valor);
			case RecuperadorPropierdadesJson.TIPO_JSON: return  procesarJson(cabecera,valor);

			default: return valor;
		}
	}
	
	private String mapearValores(String cabecera, String valor) throws Exception{
		if(!RecEntAct.getInstance().getCep().getRecuperadorPropiedadesJson().isMapeador(cabecera) || valor==null)
			return valor;
		System.out.println("Valor a mapear: "+valor);
		return Mapeador.getInstance().getValorMapeado(RecEntAct.getInstance().getCep().getRecuperadorPropiedadesJson().getMapeador(cabecera),valor);
			
	}
	
	@Override
	public void agregarCampo(String cabecera, String valor) throws Exception {
		insertarValorJson(cabecera,valor);
	}	
	
	/**
	 * Método Exclusivo para debuguear
	 * @param dataJson
	 * @throws ParseException
	 */

	public void mostrar() {
		System.out.println();
	}
	
	private boolean compararCampos(String valorPermitido, String valor,String cabecera){
		if(RecEntAct.getInstance().getCep().getRecuperadorPropiedadesJson().isValoresPermitidosCaseSensitive(cabecera))
			return valor.equals(valorPermitido);
		else
			return valor.equalsIgnoreCase(valorPermitido);
	}






}
